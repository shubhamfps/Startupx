#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Startupx
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="business_solutiondb")]
	public partial class Startupx_dbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCity(City instance);
    partial void UpdateCity(City instance);
    partial void DeleteCity(City instance);
    partial void InsertWarehouse(Warehouse instance);
    partial void UpdateWarehouse(Warehouse instance);
    partial void DeleteWarehouse(Warehouse instance);
    partial void InsertDepartment(Department instance);
    partial void UpdateDepartment(Department instance);
    partial void DeleteDepartment(Department instance);
    partial void InsertEmployee(Employee instance);
    partial void UpdateEmployee(Employee instance);
    partial void DeleteEmployee(Employee instance);
    partial void InsertGender(Gender instance);
    partial void UpdateGender(Gender instance);
    partial void DeleteGender(Gender instance);
    partial void InsertItem_brand(Item_brand instance);
    partial void UpdateItem_brand(Item_brand instance);
    partial void DeleteItem_brand(Item_brand instance);
    partial void InsertItem_category(Item_category instance);
    partial void UpdateItem_category(Item_category instance);
    partial void DeleteItem_category(Item_category instance);
    partial void InsertJob_Title(Job_Title instance);
    partial void UpdateJob_Title(Job_Title instance);
    partial void DeleteJob_Title(Job_Title instance);
    partial void InsertPermission(Permission instance);
    partial void UpdatePermission(Permission instance);
    partial void DeletePermission(Permission instance);
    partial void InsertProvince(Province instance);
    partial void UpdateProvince(Province instance);
    partial void DeleteProvince(Province instance);
    partial void InsertSalary(Salary instance);
    partial void UpdateSalary(Salary instance);
    partial void DeleteSalary(Salary instance);
    partial void InsertSection(Section instance);
    partial void UpdateSection(Section instance);
    partial void DeleteSection(Section instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertUser_has_permission(User_has_permission instance);
    partial void UpdateUser_has_permission(User_has_permission instance);
    partial void DeleteUser_has_permission(User_has_permission instance);
    partial void InsertReport(Report instance);
    partial void UpdateReport(Report instance);
    partial void DeleteReport(Report instance);
    partial void InsertInvoice_item(Invoice_item instance);
    partial void UpdateInvoice_item(Invoice_item instance);
    partial void DeleteInvoice_item(Invoice_item instance);
    partial void InsertPayment_method(Payment_method instance);
    partial void UpdatePayment_method(Payment_method instance);
    partial void DeletePayment_method(Payment_method instance);
    partial void InsertInvoice(Invoice instance);
    partial void UpdateInvoice(Invoice instance);
    partial void DeleteInvoice(Invoice instance);
    partial void InsertItem(Item instance);
    partial void UpdateItem(Item instance);
    partial void DeleteItem(Item instance);
    #endregion
		
		public Startupx_dbDataContext() : 
				base(global::Startupx.Properties.Settings.Default.business_solutiondbConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public Startupx_dbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Startupx_dbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Startupx_dbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public Startupx_dbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<City> Cities
		{
			get
			{
				return this.GetTable<City>();
			}
		}
		
		public System.Data.Linq.Table<Warehouse> Warehouses
		{
			get
			{
				return this.GetTable<Warehouse>();
			}
		}
		
		public System.Data.Linq.Table<Department> Departments
		{
			get
			{
				return this.GetTable<Department>();
			}
		}
		
		public System.Data.Linq.Table<Employee> Employees
		{
			get
			{
				return this.GetTable<Employee>();
			}
		}
		
		public System.Data.Linq.Table<Gender> Genders
		{
			get
			{
				return this.GetTable<Gender>();
			}
		}
		
		public System.Data.Linq.Table<Item_brand> Item_brands
		{
			get
			{
				return this.GetTable<Item_brand>();
			}
		}
		
		public System.Data.Linq.Table<Item_category> Item_categories
		{
			get
			{
				return this.GetTable<Item_category>();
			}
		}
		
		public System.Data.Linq.Table<Job_Title> Job_Titles
		{
			get
			{
				return this.GetTable<Job_Title>();
			}
		}
		
		public System.Data.Linq.Table<Permission> Permissions
		{
			get
			{
				return this.GetTable<Permission>();
			}
		}
		
		public System.Data.Linq.Table<Province> Provinces
		{
			get
			{
				return this.GetTable<Province>();
			}
		}
		
		public System.Data.Linq.Table<Salary> Salaries
		{
			get
			{
				return this.GetTable<Salary>();
			}
		}
		
		public System.Data.Linq.Table<Section> Sections
		{
			get
			{
				return this.GetTable<Section>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<User_has_permission> User_has_permissions
		{
			get
			{
				return this.GetTable<User_has_permission>();
			}
		}
		
		public System.Data.Linq.Table<Report> Reports
		{
			get
			{
				return this.GetTable<Report>();
			}
		}
		
		public System.Data.Linq.Table<Invoice_item> Invoice_items
		{
			get
			{
				return this.GetTable<Invoice_item>();
			}
		}
		
		public System.Data.Linq.Table<Payment_method> Payment_methods
		{
			get
			{
				return this.GetTable<Payment_method>();
			}
		}
		
		public System.Data.Linq.Table<Invoice> Invoices
		{
			get
			{
				return this.GetTable<Invoice>();
			}
		}
		
		public System.Data.Linq.Table<Item> Items
		{
			get
			{
				return this.GetTable<Item>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_cities_by_province")]
		public ISingleResult<sp_cities_by_provinceResult> sp_cities_by_province([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(45)")] string province_name)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), province_name);
			return ((ISingleResult<sp_cities_by_provinceResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_department_list")]
		public ISingleResult<sp_department_listResult> sp_department_list()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp_department_listResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_employee_list")]
		public ISingleResult<sp_employee_listResult> sp_employee_list()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp_employee_listResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_get_citylist")]
		public ISingleResult<sp_get_citylistResult> sp_get_citylist()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp_get_citylistResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_get_payroll_for_employee_id")]
		public ISingleResult<sp_get_payroll_for_employee_idResult> sp_get_payroll_for_employee_id([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> employee_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), employee_id);
			return ((ISingleResult<sp_get_payroll_for_employee_idResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_insert_employee")]
		public int sp_insert_employee([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(45)")] string f_name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(45)")] string l_name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(45)")] string address, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> phone, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(45)")] string department, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> salary, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(45)")] string gender, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(45)")] string job_title, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(45)")] string city_name)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), f_name, l_name, address, phone, department, salary, gender, job_title, city_name);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_insert_item")]
		public int sp_insert_item([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(45)")] string barcode, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(45)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(45)")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> price, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> expired_date, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(45)")] string category, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(45)")] string brand, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(45)")] string section)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), barcode, name, description, price, expired_date, category, brand, section);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_jobtitle_list")]
		public ISingleResult<sp_jobtitle_listResult> sp_jobtitle_list()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp_jobtitle_listResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_renamediagram")]
		public int sp_renamediagram([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(128)")] string diagramname, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> owner_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="NVarChar(128)")] string new_diagramname)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), diagramname, owner_id, new_diagramname);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_sections_by_warehouse")]
		public ISingleResult<sp_sections_by_warehouseResult> sp_sections_by_warehouse([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(45)")] string warehouse)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), warehouse);
			return ((ISingleResult<sp_sections_by_warehouseResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.fn_exist_brand", IsComposable=true)]
		public System.Nullable<int> fn_exist_brand([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(45)")] string brand_name)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), brand_name).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.fn_exist_category", IsComposable=true)]
		public System.Nullable<int> fn_exist_category([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(45)")] string category_name)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), category_name).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.fn_generate_barcode", IsComposable=true)]
		public string fn_generate_barcode([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(45)")] string category_name)
		{
			return ((string)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), category_name).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_update_item")]
		public int sp_update_item([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(45)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(45)")] string description, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> price, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> expired_date, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(45)")] string category, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(45)")] string brand, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(45)")] string section)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id, name, description, price, expired_date, category, brand, section);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_employee_list")]
		public ISingleResult<sp_employee_listResult1> sp_employee_list1()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp_employee_listResult1>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_employee_list")]
		public ISingleResult<sp_employee_listResult2> sp_employee_list2()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp_employee_listResult2>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_insert_employee")]
		public int sp_insert_employee1([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(45)")] string f_name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(45)")] string l_name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(45)")] string address, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> phone, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(45)")] string department, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> salary, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(45)")] string gender, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(45)")] string job_title, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(45)")] string city_name)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), f_name, l_name, address, phone, department, salary, gender, job_title, city_name);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_update_employee")]
		public int sp_update_employee([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> emp_Id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(45)")] string f_name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(45)")] string l_name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(45)")] string address, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> phone, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(45)")] string department, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> salary, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(45)")] string gender, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(45)")] string job_title, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(45)")] string city_name)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), emp_Id, f_name, l_name, address, phone, department, salary, gender, job_title, city_name);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.fn_login_user", IsComposable=true)]
		public System.Nullable<int> fn_login_user([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(45)")] string user, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(45)")] string password)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), user, password).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.fn_login_user_permission", IsComposable=true)]
		public System.Nullable<int> fn_login_user_permission([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(45)")] string user, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> module_id)
		{
			return ((System.Nullable<int>)(this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), user, module_id).ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_payroll_list")]
		public ISingleResult<sp_payroll_listResult> sp_payroll_list()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp_payroll_listResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_update_payroll")]
		public int sp_update_payroll([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> payroll_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> employee_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> working_hours, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> gross_salary, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> net_salary, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> salary_ini_period, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> salary_end_period, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> adjustment_percent)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), payroll_id, employee_id, working_hours, gross_salary, net_salary, salary_ini_period, salary_end_period, adjustment_percent);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_generate_payroll_for_employee_id")]
		public int sp_generate_payroll_for_employee_id([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> employee_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> working_hours, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> gross_salary, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> net_salary, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> salary_ini_period, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Date")] System.Nullable<System.DateTime> salary_end_period, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Float")] System.Nullable<double> adjustment_percent)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), employee_id, working_hours, gross_salary, net_salary, salary_ini_period, salary_end_period, adjustment_percent);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.rp_items_by_category")]
		public ISingleResult<rp_items_by_categoryResult> rp_items_by_category([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(5)")] string category_code)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), category_code);
			return ((ISingleResult<rp_items_by_categoryResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.rp_items_by_brand")]
		public ISingleResult<rp_items_by_brandResult> rp_items_by_brand([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(45)")] string brand_name)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), brand_name);
			return ((ISingleResult<rp_items_by_brandResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_update_payment_method")]
		public int sp_update_payment_method([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> invoice_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(45)")] string name, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="BigInt")] System.Nullable<long> card, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(45)")] string payment)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), invoice_id, name, card, payment);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_insert_permission")]
		public int sp_insert_permission([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(45)")] string description)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), description);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_insert_user")]
		public int sp_insert_user([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(45)")] string username, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(45)")] string password, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> employee_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username, password, employee_id);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_insert_user_permission")]
		public int sp_insert_user_permission([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> user_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> permission_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> status)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), user_id, permission_id, status);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_list_permission_by_user")]
		public ISingleResult<sp_list_permission_by_userResult> sp_list_permission_by_user([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(45)")] string username)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), username);
			return ((ISingleResult<sp_list_permission_by_userResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_remove_permission")]
		public int sp_remove_permission([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> user_id, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(45)")] string description)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), user_id, description);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp__item_list")]
		public ISingleResult<sp__item_listResult> sp__item_list()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp__item_listResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_update_item_stock")]
		public int sp_update_item_stock([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(45)")] string barcode, [global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> quantity)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), barcode, quantity);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.rp_employee_details_by_id")]
		public ISingleResult<rp_employee_details_by_idResult> rp_employee_details_by_id([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="VarChar(45)")] string employee_id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), employee_id);
			return ((ISingleResult<rp_employee_details_by_idResult>)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_list_user")]
		public ISingleResult<sp_list_userResult> sp_list_user()
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())));
			return ((ISingleResult<sp_list_userResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="business_solutiondb.City")]
	public partial class City : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _city_name;
		
		private int _province_id;
		
		private EntitySet<Employee> _Employees;
		
		private EntityRef<Province> _Province;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Oncity_nameChanging(string value);
    partial void Oncity_nameChanged();
    partial void Onprovince_idChanging(int value);
    partial void Onprovince_idChanged();
    #endregion
		
		public City()
		{
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			this._Province = default(EntityRef<Province>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city_name", DbType="NVarChar(45) NOT NULL", CanBeNull=false)]
		public string city_name
		{
			get
			{
				return this._city_name;
			}
			set
			{
				if ((this._city_name != value))
				{
					this.Oncity_nameChanging(value);
					this.SendPropertyChanging();
					this._city_name = value;
					this.SendPropertyChanged("city_name");
					this.Oncity_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_province_id", DbType="Int NOT NULL")]
		public int province_id
		{
			get
			{
				return this._province_id;
			}
			set
			{
				if ((this._province_id != value))
				{
					if (this._Province.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onprovince_idChanging(value);
					this.SendPropertyChanging();
					this._province_id = value;
					this.SendPropertyChanged("province_id");
					this.Onprovince_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_Employee", Storage="_Employees", ThisKey="id", OtherKey="city_id")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Province_City", Storage="_Province", ThisKey="province_id", OtherKey="id", IsForeignKey=true)]
		public Province Province
		{
			get
			{
				return this._Province.Entity;
			}
			set
			{
				Province previousValue = this._Province.Entity;
				if (((previousValue != value) 
							|| (this._Province.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Province.Entity = null;
						previousValue.Cities.Remove(this);
					}
					this._Province.Entity = value;
					if ((value != null))
					{
						value.Cities.Add(this);
						this._province_id = value.id;
					}
					else
					{
						this._province_id = default(int);
					}
					this.SendPropertyChanged("Province");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.City = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.City = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="business_solutiondb.Warehouse")]
	public partial class Warehouse : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _location;
		
		private EntitySet<Section> _Sections;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnlocationChanging(string value);
    partial void OnlocationChanged();
    #endregion
		
		public Warehouse()
		{
			this._Sections = new EntitySet<Section>(new Action<Section>(this.attach_Sections), new Action<Section>(this.detach_Sections));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(45)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location", DbType="NVarChar(45)")]
		public string location
		{
			get
			{
				return this._location;
			}
			set
			{
				if ((this._location != value))
				{
					this.OnlocationChanging(value);
					this.SendPropertyChanging();
					this._location = value;
					this.SendPropertyChanged("location");
					this.OnlocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Warehouse_Section", Storage="_Sections", ThisKey="id", OtherKey="warehouse_id")]
		public EntitySet<Section> Sections
		{
			get
			{
				return this._Sections;
			}
			set
			{
				this._Sections.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Sections(Section entity)
		{
			this.SendPropertyChanging();
			entity.Warehouse = this;
		}
		
		private void detach_Sections(Section entity)
		{
			this.SendPropertyChanging();
			entity.Warehouse = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="business_solutiondb.Department")]
	public partial class Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _department_name;
		
		private EntitySet<Employee> _Employees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Ondepartment_nameChanging(string value);
    partial void Ondepartment_nameChanged();
    #endregion
		
		public Department()
		{
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_department_name", DbType="NVarChar(45)")]
		public string department_name
		{
			get
			{
				return this._department_name;
			}
			set
			{
				if ((this._department_name != value))
				{
					this.Ondepartment_nameChanging(value);
					this.SendPropertyChanging();
					this._department_name = value;
					this.SendPropertyChanged("department_name");
					this.Ondepartment_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Employee", Storage="_Employees", ThisKey="id", OtherKey="department_id")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Department = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Department = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="business_solutiondb.Employee")]
	public partial class Employee : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _first_name;
		
		private string _last_name;
		
		private string _address;
		
		private System.Nullable<long> _phone;
		
		private System.Nullable<System.DateTime> _join_date;
		
		private System.Nullable<System.DateTime> _leaving_date;
		
		private System.Nullable<int> _department_id;
		
		private System.Nullable<double> _salary;
		
		private System.Nullable<int> _gender_id;
		
		private System.Nullable<int> _job_title_id;
		
		private System.Nullable<int> _city_id;
		
		private EntitySet<Salary> _Salaries;
		
		private EntitySet<User> _Users;
		
		private EntityRef<City> _City;
		
		private EntityRef<Department> _Department;
		
		private EntityRef<Gender> _Gender;
		
		private EntityRef<Job_Title> _Job_Title;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onfirst_nameChanging(string value);
    partial void Onfirst_nameChanged();
    partial void Onlast_nameChanging(string value);
    partial void Onlast_nameChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnphoneChanging(System.Nullable<long> value);
    partial void OnphoneChanged();
    partial void Onjoin_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onjoin_dateChanged();
    partial void Onleaving_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onleaving_dateChanged();
    partial void Ondepartment_idChanging(System.Nullable<int> value);
    partial void Ondepartment_idChanged();
    partial void OnsalaryChanging(System.Nullable<double> value);
    partial void OnsalaryChanged();
    partial void Ongender_idChanging(System.Nullable<int> value);
    partial void Ongender_idChanged();
    partial void Onjob_title_idChanging(System.Nullable<int> value);
    partial void Onjob_title_idChanged();
    partial void Oncity_idChanging(System.Nullable<int> value);
    partial void Oncity_idChanged();
    #endregion
		
		public Employee()
		{
			this._Salaries = new EntitySet<Salary>(new Action<Salary>(this.attach_Salaries), new Action<Salary>(this.detach_Salaries));
			this._Users = new EntitySet<User>(new Action<User>(this.attach_Users), new Action<User>(this.detach_Users));
			this._City = default(EntityRef<City>);
			this._Department = default(EntityRef<Department>);
			this._Gender = default(EntityRef<Gender>);
			this._Job_Title = default(EntityRef<Job_Title>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_first_name", DbType="NVarChar(45)")]
		public string first_name
		{
			get
			{
				return this._first_name;
			}
			set
			{
				if ((this._first_name != value))
				{
					this.Onfirst_nameChanging(value);
					this.SendPropertyChanging();
					this._first_name = value;
					this.SendPropertyChanged("first_name");
					this.Onfirst_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_name", DbType="NVarChar(45)")]
		public string last_name
		{
			get
			{
				return this._last_name;
			}
			set
			{
				if ((this._last_name != value))
				{
					this.Onlast_nameChanging(value);
					this.SendPropertyChanging();
					this._last_name = value;
					this.SendPropertyChanged("last_name");
					this.Onlast_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(255)")]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="BigInt")]
		public System.Nullable<long> phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_join_date", DbType="Date")]
		public System.Nullable<System.DateTime> join_date
		{
			get
			{
				return this._join_date;
			}
			set
			{
				if ((this._join_date != value))
				{
					this.Onjoin_dateChanging(value);
					this.SendPropertyChanging();
					this._join_date = value;
					this.SendPropertyChanged("join_date");
					this.Onjoin_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_leaving_date", DbType="Date")]
		public System.Nullable<System.DateTime> leaving_date
		{
			get
			{
				return this._leaving_date;
			}
			set
			{
				if ((this._leaving_date != value))
				{
					this.Onleaving_dateChanging(value);
					this.SendPropertyChanging();
					this._leaving_date = value;
					this.SendPropertyChanged("leaving_date");
					this.Onleaving_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_department_id", DbType="Int")]
		public System.Nullable<int> department_id
		{
			get
			{
				return this._department_id;
			}
			set
			{
				if ((this._department_id != value))
				{
					if (this._Department.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ondepartment_idChanging(value);
					this.SendPropertyChanging();
					this._department_id = value;
					this.SendPropertyChanged("department_id");
					this.Ondepartment_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salary", DbType="Float")]
		public System.Nullable<double> salary
		{
			get
			{
				return this._salary;
			}
			set
			{
				if ((this._salary != value))
				{
					this.OnsalaryChanging(value);
					this.SendPropertyChanging();
					this._salary = value;
					this.SendPropertyChanged("salary");
					this.OnsalaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender_id", DbType="Int")]
		public System.Nullable<int> gender_id
		{
			get
			{
				return this._gender_id;
			}
			set
			{
				if ((this._gender_id != value))
				{
					if (this._Gender.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ongender_idChanging(value);
					this.SendPropertyChanging();
					this._gender_id = value;
					this.SendPropertyChanged("gender_id");
					this.Ongender_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_job_title_id", DbType="Int")]
		public System.Nullable<int> job_title_id
		{
			get
			{
				return this._job_title_id;
			}
			set
			{
				if ((this._job_title_id != value))
				{
					if (this._Job_Title.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onjob_title_idChanging(value);
					this.SendPropertyChanging();
					this._job_title_id = value;
					this.SendPropertyChanged("job_title_id");
					this.Onjob_title_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city_id", DbType="Int")]
		public System.Nullable<int> city_id
		{
			get
			{
				return this._city_id;
			}
			set
			{
				if ((this._city_id != value))
				{
					if (this._City.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncity_idChanging(value);
					this.SendPropertyChanging();
					this._city_id = value;
					this.SendPropertyChanged("city_id");
					this.Oncity_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Salary", Storage="_Salaries", ThisKey="id", OtherKey="employee_id")]
		public EntitySet<Salary> Salaries
		{
			get
			{
				return this._Salaries;
			}
			set
			{
				this._Salaries.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_User", Storage="_Users", ThisKey="id", OtherKey="employee_id")]
		public EntitySet<User> Users
		{
			get
			{
				return this._Users;
			}
			set
			{
				this._Users.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="City_Employee", Storage="_City", ThisKey="city_id", OtherKey="id", IsForeignKey=true)]
		public City City
		{
			get
			{
				return this._City.Entity;
			}
			set
			{
				City previousValue = this._City.Entity;
				if (((previousValue != value) 
							|| (this._City.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._City.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._City.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._city_id = value.id;
					}
					else
					{
						this._city_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("City");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Department_Employee", Storage="_Department", ThisKey="department_id", OtherKey="id", IsForeignKey=true)]
		public Department Department
		{
			get
			{
				return this._Department.Entity;
			}
			set
			{
				Department previousValue = this._Department.Entity;
				if (((previousValue != value) 
							|| (this._Department.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Department.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._Department.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._department_id = value.id;
					}
					else
					{
						this._department_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Department");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gender_Employee", Storage="_Gender", ThisKey="gender_id", OtherKey="id", IsForeignKey=true)]
		public Gender Gender
		{
			get
			{
				return this._Gender.Entity;
			}
			set
			{
				Gender previousValue = this._Gender.Entity;
				if (((previousValue != value) 
							|| (this._Gender.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Gender.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._Gender.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._gender_id = value.id;
					}
					else
					{
						this._gender_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Gender");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_Title_Employee", Storage="_Job_Title", ThisKey="job_title_id", OtherKey="id", IsForeignKey=true)]
		public Job_Title Job_Title
		{
			get
			{
				return this._Job_Title.Entity;
			}
			set
			{
				Job_Title previousValue = this._Job_Title.Entity;
				if (((previousValue != value) 
							|| (this._Job_Title.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Job_Title.Entity = null;
						previousValue.Employees.Remove(this);
					}
					this._Job_Title.Entity = value;
					if ((value != null))
					{
						value.Employees.Add(this);
						this._job_title_id = value.id;
					}
					else
					{
						this._job_title_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Job_Title");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Salaries(Salary entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Salaries(Salary entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
		
		private void attach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Employee = this;
		}
		
		private void detach_Users(User entity)
		{
			this.SendPropertyChanging();
			entity.Employee = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="business_solutiondb.Gender")]
	public partial class Gender : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _gender_name;
		
		private EntitySet<Employee> _Employees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Ongender_nameChanging(string value);
    partial void Ongender_nameChanged();
    #endregion
		
		public Gender()
		{
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gender_name", DbType="NVarChar(45)")]
		public string gender_name
		{
			get
			{
				return this._gender_name;
			}
			set
			{
				if ((this._gender_name != value))
				{
					this.Ongender_nameChanging(value);
					this.SendPropertyChanging();
					this._gender_name = value;
					this.SendPropertyChanged("gender_name");
					this.Ongender_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Gender_Employee", Storage="_Employees", ThisKey="id", OtherKey="gender_id")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Gender = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Gender = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="business_solutiondb.Item_brand")]
	public partial class Item_brand : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _brand_name;
		
		private EntitySet<Item> _Items;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onbrand_nameChanging(string value);
    partial void Onbrand_nameChanged();
    #endregion
		
		public Item_brand()
		{
			this._Items = new EntitySet<Item>(new Action<Item>(this.attach_Items), new Action<Item>(this.detach_Items));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_brand_name", DbType="VarChar(50)")]
		public string brand_name
		{
			get
			{
				return this._brand_name;
			}
			set
			{
				if ((this._brand_name != value))
				{
					this.Onbrand_nameChanging(value);
					this.SendPropertyChanging();
					this._brand_name = value;
					this.SendPropertyChanged("brand_name");
					this.Onbrand_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_brand_Item", Storage="_Items", ThisKey="id", OtherKey="brand_id")]
		public EntitySet<Item> Items
		{
			get
			{
				return this._Items;
			}
			set
			{
				this._Items.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.Item_brand = this;
		}
		
		private void detach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.Item_brand = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="business_solutiondb.Item_category")]
	public partial class Item_category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _category_name;
		
		private string _category_pref;
		
		private EntitySet<Item> _Items;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Oncategory_nameChanging(string value);
    partial void Oncategory_nameChanged();
    partial void Oncategory_prefChanging(string value);
    partial void Oncategory_prefChanged();
    #endregion
		
		public Item_category()
		{
			this._Items = new EntitySet<Item>(new Action<Item>(this.attach_Items), new Action<Item>(this.detach_Items));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category_name", DbType="VarChar(150)")]
		public string category_name
		{
			get
			{
				return this._category_name;
			}
			set
			{
				if ((this._category_name != value))
				{
					this.Oncategory_nameChanging(value);
					this.SendPropertyChanging();
					this._category_name = value;
					this.SendPropertyChanged("category_name");
					this.Oncategory_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category_pref", DbType="VarChar(3)")]
		public string category_pref
		{
			get
			{
				return this._category_pref;
			}
			set
			{
				if ((this._category_pref != value))
				{
					this.Oncategory_prefChanging(value);
					this.SendPropertyChanging();
					this._category_pref = value;
					this.SendPropertyChanged("category_pref");
					this.Oncategory_prefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_category_Item", Storage="_Items", ThisKey="id", OtherKey="category_id")]
		public EntitySet<Item> Items
		{
			get
			{
				return this._Items;
			}
			set
			{
				this._Items.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.Item_category = this;
		}
		
		private void detach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.Item_category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="business_solutiondb.Job_Title")]
	public partial class Job_Title : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _job_title1;
		
		private EntitySet<Employee> _Employees;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onjob_title1Changing(string value);
    partial void Onjob_title1Changed();
    #endregion
		
		public Job_Title()
		{
			this._Employees = new EntitySet<Employee>(new Action<Employee>(this.attach_Employees), new Action<Employee>(this.detach_Employees));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="job_title", Storage="_job_title1", DbType="NVarChar(45)")]
		public string job_title1
		{
			get
			{
				return this._job_title1;
			}
			set
			{
				if ((this._job_title1 != value))
				{
					this.Onjob_title1Changing(value);
					this.SendPropertyChanging();
					this._job_title1 = value;
					this.SendPropertyChanged("job_title1");
					this.Onjob_title1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Job_Title_Employee", Storage="_Employees", ThisKey="id", OtherKey="job_title_id")]
		public EntitySet<Employee> Employees
		{
			get
			{
				return this._Employees;
			}
			set
			{
				this._Employees.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Job_Title = this;
		}
		
		private void detach_Employees(Employee entity)
		{
			this.SendPropertyChanging();
			entity.Job_Title = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="business_solutiondb.Permission")]
	public partial class Permission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _description;
		
		private EntitySet<User_has_permission> _User_has_permissions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public Permission()
		{
			this._User_has_permissions = new EntitySet<User_has_permission>(new Action<User_has_permission>(this.attach_User_has_permissions), new Action<User_has_permission>(this.detach_User_has_permissions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(50)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permission_User_has_permission", Storage="_User_has_permissions", ThisKey="id", OtherKey="permission_id")]
		public EntitySet<User_has_permission> User_has_permissions
		{
			get
			{
				return this._User_has_permissions;
			}
			set
			{
				this._User_has_permissions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_User_has_permissions(User_has_permission entity)
		{
			this.SendPropertyChanging();
			entity.Permission = this;
		}
		
		private void detach_User_has_permissions(User_has_permission entity)
		{
			this.SendPropertyChanging();
			entity.Permission = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="business_solutiondb.Province")]
	public partial class Province : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _province_name;
		
		private EntitySet<City> _Cities;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onprovince_nameChanging(string value);
    partial void Onprovince_nameChanged();
    #endregion
		
		public Province()
		{
			this._Cities = new EntitySet<City>(new Action<City>(this.attach_Cities), new Action<City>(this.detach_Cities));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_province_name", DbType="NVarChar(45)")]
		public string province_name
		{
			get
			{
				return this._province_name;
			}
			set
			{
				if ((this._province_name != value))
				{
					this.Onprovince_nameChanging(value);
					this.SendPropertyChanging();
					this._province_name = value;
					this.SendPropertyChanged("province_name");
					this.Onprovince_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Province_City", Storage="_Cities", ThisKey="id", OtherKey="province_id")]
		public EntitySet<City> Cities
		{
			get
			{
				return this._Cities;
			}
			set
			{
				this._Cities.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Cities(City entity)
		{
			this.SendPropertyChanging();
			entity.Province = this;
		}
		
		private void detach_Cities(City entity)
		{
			this.SendPropertyChanging();
			entity.Province = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="business_solutiondb.Salary")]
	public partial class Salary : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _working_hours;
		
		private System.Nullable<double> _gross_salary;
		
		private System.Nullable<double> _net_salary;
		
		private System.Nullable<System.DateTime> _salary_ini_period;
		
		private System.Nullable<System.DateTime> _salary_end_period;
		
		private System.Nullable<double> _adjustment_percent;
		
		private System.Nullable<int> _employee_id;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onworking_hoursChanging(System.Nullable<int> value);
    partial void Onworking_hoursChanged();
    partial void Ongross_salaryChanging(System.Nullable<double> value);
    partial void Ongross_salaryChanged();
    partial void Onnet_salaryChanging(System.Nullable<double> value);
    partial void Onnet_salaryChanged();
    partial void Onsalary_ini_periodChanging(System.Nullable<System.DateTime> value);
    partial void Onsalary_ini_periodChanged();
    partial void Onsalary_end_periodChanging(System.Nullable<System.DateTime> value);
    partial void Onsalary_end_periodChanged();
    partial void Onadjustment_percentChanging(System.Nullable<double> value);
    partial void Onadjustment_percentChanged();
    partial void Onemployee_idChanging(System.Nullable<int> value);
    partial void Onemployee_idChanged();
    #endregion
		
		public Salary()
		{
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_working_hours", DbType="Int")]
		public System.Nullable<int> working_hours
		{
			get
			{
				return this._working_hours;
			}
			set
			{
				if ((this._working_hours != value))
				{
					this.Onworking_hoursChanging(value);
					this.SendPropertyChanging();
					this._working_hours = value;
					this.SendPropertyChanged("working_hours");
					this.Onworking_hoursChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gross_salary", DbType="Float")]
		public System.Nullable<double> gross_salary
		{
			get
			{
				return this._gross_salary;
			}
			set
			{
				if ((this._gross_salary != value))
				{
					this.Ongross_salaryChanging(value);
					this.SendPropertyChanging();
					this._gross_salary = value;
					this.SendPropertyChanged("gross_salary");
					this.Ongross_salaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_net_salary", DbType="Float")]
		public System.Nullable<double> net_salary
		{
			get
			{
				return this._net_salary;
			}
			set
			{
				if ((this._net_salary != value))
				{
					this.Onnet_salaryChanging(value);
					this.SendPropertyChanging();
					this._net_salary = value;
					this.SendPropertyChanged("net_salary");
					this.Onnet_salaryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salary_ini_period", DbType="Date")]
		public System.Nullable<System.DateTime> salary_ini_period
		{
			get
			{
				return this._salary_ini_period;
			}
			set
			{
				if ((this._salary_ini_period != value))
				{
					this.Onsalary_ini_periodChanging(value);
					this.SendPropertyChanging();
					this._salary_ini_period = value;
					this.SendPropertyChanged("salary_ini_period");
					this.Onsalary_ini_periodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salary_end_period", DbType="Date")]
		public System.Nullable<System.DateTime> salary_end_period
		{
			get
			{
				return this._salary_end_period;
			}
			set
			{
				if ((this._salary_end_period != value))
				{
					this.Onsalary_end_periodChanging(value);
					this.SendPropertyChanging();
					this._salary_end_period = value;
					this.SendPropertyChanged("salary_end_period");
					this.Onsalary_end_periodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adjustment_percent", DbType="Float")]
		public System.Nullable<double> adjustment_percent
		{
			get
			{
				return this._adjustment_percent;
			}
			set
			{
				if ((this._adjustment_percent != value))
				{
					this.Onadjustment_percentChanging(value);
					this.SendPropertyChanging();
					this._adjustment_percent = value;
					this.SendPropertyChanged("adjustment_percent");
					this.Onadjustment_percentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee_id", DbType="Int")]
		public System.Nullable<int> employee_id
		{
			get
			{
				return this._employee_id;
			}
			set
			{
				if ((this._employee_id != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onemployee_idChanging(value);
					this.SendPropertyChanging();
					this._employee_id = value;
					this.SendPropertyChanged("employee_id");
					this.Onemployee_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_Salary", Storage="_Employee", ThisKey="employee_id", OtherKey="id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Salaries.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Salaries.Add(this);
						this._employee_id = value.id;
					}
					else
					{
						this._employee_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="business_solutiondb.Section")]
	public partial class Section : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _section_name;
		
		private System.Nullable<int> _warehouse_id;
		
		private EntitySet<Item> _Items;
		
		private EntityRef<Warehouse> _Warehouse;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onsection_nameChanging(string value);
    partial void Onsection_nameChanged();
    partial void Onwarehouse_idChanging(System.Nullable<int> value);
    partial void Onwarehouse_idChanged();
    #endregion
		
		public Section()
		{
			this._Items = new EntitySet<Item>(new Action<Item>(this.attach_Items), new Action<Item>(this.detach_Items));
			this._Warehouse = default(EntityRef<Warehouse>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_section_name", DbType="NVarChar(45)")]
		public string section_name
		{
			get
			{
				return this._section_name;
			}
			set
			{
				if ((this._section_name != value))
				{
					this.Onsection_nameChanging(value);
					this.SendPropertyChanging();
					this._section_name = value;
					this.SendPropertyChanged("section_name");
					this.Onsection_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_warehouse_id", DbType="Int")]
		public System.Nullable<int> warehouse_id
		{
			get
			{
				return this._warehouse_id;
			}
			set
			{
				if ((this._warehouse_id != value))
				{
					if (this._Warehouse.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onwarehouse_idChanging(value);
					this.SendPropertyChanging();
					this._warehouse_id = value;
					this.SendPropertyChanged("warehouse_id");
					this.Onwarehouse_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Section_Item", Storage="_Items", ThisKey="id", OtherKey="section_id")]
		public EntitySet<Item> Items
		{
			get
			{
				return this._Items;
			}
			set
			{
				this._Items.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Warehouse_Section", Storage="_Warehouse", ThisKey="warehouse_id", OtherKey="id", IsForeignKey=true)]
		public Warehouse Warehouse
		{
			get
			{
				return this._Warehouse.Entity;
			}
			set
			{
				Warehouse previousValue = this._Warehouse.Entity;
				if (((previousValue != value) 
							|| (this._Warehouse.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Warehouse.Entity = null;
						previousValue.Sections.Remove(this);
					}
					this._Warehouse.Entity = value;
					if ((value != null))
					{
						value.Sections.Add(this);
						this._warehouse_id = value.id;
					}
					else
					{
						this._warehouse_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Warehouse");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.Section = this;
		}
		
		private void detach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.Section = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="business_solutiondb.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _username;
		
		private string _password;
		
		private System.Nullable<int> _employee_id;
		
		private EntitySet<User_has_permission> _User_has_permissions;
		
		private EntitySet<Invoice> _Invoices;
		
		private EntityRef<Employee> _Employee;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void Onemployee_idChanging(System.Nullable<int> value);
    partial void Onemployee_idChanged();
    #endregion
		
		public User()
		{
			this._User_has_permissions = new EntitySet<User_has_permission>(new Action<User_has_permission>(this.attach_User_has_permissions), new Action<User_has_permission>(this.detach_User_has_permissions));
			this._Invoices = new EntitySet<Invoice>(new Action<Invoice>(this.attach_Invoices), new Action<Invoice>(this.detach_Invoices));
			this._Employee = default(EntityRef<Employee>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(45)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(45)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_employee_id", DbType="Int")]
		public System.Nullable<int> employee_id
		{
			get
			{
				return this._employee_id;
			}
			set
			{
				if ((this._employee_id != value))
				{
					if (this._Employee.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onemployee_idChanging(value);
					this.SendPropertyChanging();
					this._employee_id = value;
					this.SendPropertyChanged("employee_id");
					this.Onemployee_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User_has_permission", Storage="_User_has_permissions", ThisKey="id", OtherKey="user_id")]
		public EntitySet<User_has_permission> User_has_permissions
		{
			get
			{
				return this._User_has_permissions;
			}
			set
			{
				this._User_has_permissions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Invoice", Storage="_Invoices", ThisKey="id", OtherKey="user_id")]
		public EntitySet<Invoice> Invoices
		{
			get
			{
				return this._Invoices;
			}
			set
			{
				this._Invoices.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Employee_User", Storage="_Employee", ThisKey="employee_id", OtherKey="id", IsForeignKey=true)]
		public Employee Employee
		{
			get
			{
				return this._Employee.Entity;
			}
			set
			{
				Employee previousValue = this._Employee.Entity;
				if (((previousValue != value) 
							|| (this._Employee.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Employee.Entity = null;
						previousValue.Users.Remove(this);
					}
					this._Employee.Entity = value;
					if ((value != null))
					{
						value.Users.Add(this);
						this._employee_id = value.id;
					}
					else
					{
						this._employee_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Employee");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_User_has_permissions(User_has_permission entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_User_has_permissions(User_has_permission entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_Invoices(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_Invoices(Invoice entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="business_solutiondb.User_has_permission")]
	public partial class User_has_permission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _user_id;
		
		private System.Nullable<int> _permission_id;
		
		private System.Nullable<int> _status;
		
		private EntityRef<Permission> _Permission;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onuser_idChanging(System.Nullable<int> value);
    partial void Onuser_idChanged();
    partial void Onpermission_idChanging(System.Nullable<int> value);
    partial void Onpermission_idChanged();
    partial void OnstatusChanging(System.Nullable<int> value);
    partial void OnstatusChanged();
    #endregion
		
		public User_has_permission()
		{
			this._Permission = default(EntityRef<Permission>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int")]
		public System.Nullable<int> user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_permission_id", DbType="Int")]
		public System.Nullable<int> permission_id
		{
			get
			{
				return this._permission_id;
			}
			set
			{
				if ((this._permission_id != value))
				{
					if (this._Permission.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onpermission_idChanging(value);
					this.SendPropertyChanging();
					this._permission_id = value;
					this.SendPropertyChanged("permission_id");
					this.Onpermission_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int")]
		public System.Nullable<int> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Permission_User_has_permission", Storage="_Permission", ThisKey="permission_id", OtherKey="id", IsForeignKey=true)]
		public Permission Permission
		{
			get
			{
				return this._Permission.Entity;
			}
			set
			{
				Permission previousValue = this._Permission.Entity;
				if (((previousValue != value) 
							|| (this._Permission.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Permission.Entity = null;
						previousValue.User_has_permissions.Remove(this);
					}
					this._Permission.Entity = value;
					if ((value != null))
					{
						value.User_has_permissions.Add(this);
						this._permission_id = value.id;
					}
					else
					{
						this._permission_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Permission");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_User_has_permission", Storage="_User", ThisKey="user_id", OtherKey="id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.User_has_permissions.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.User_has_permissions.Add(this);
						this._user_id = value.id;
					}
					else
					{
						this._user_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="business_solutiondb.Report")]
	public partial class Report : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _report_name;
		
		private System.Nullable<int> _module;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onreport_nameChanging(string value);
    partial void Onreport_nameChanged();
    partial void OnmoduleChanging(System.Nullable<int> value);
    partial void OnmoduleChanged();
    #endregion
		
		public Report()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_report_name", DbType="VarChar(150)")]
		public string report_name
		{
			get
			{
				return this._report_name;
			}
			set
			{
				if ((this._report_name != value))
				{
					this.Onreport_nameChanging(value);
					this.SendPropertyChanging();
					this._report_name = value;
					this.SendPropertyChanged("report_name");
					this.Onreport_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_module", DbType="Int")]
		public System.Nullable<int> module
		{
			get
			{
				return this._module;
			}
			set
			{
				if ((this._module != value))
				{
					this.OnmoduleChanging(value);
					this.SendPropertyChanging();
					this._module = value;
					this.SendPropertyChanged("module");
					this.OnmoduleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="business_solutiondb.Invoice_item")]
	public partial class Invoice_item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _product_id;
		
		private System.Nullable<int> _invoice_id;
		
		private System.Nullable<double> _quant;
		
		private EntityRef<Invoice> _Invoice;
		
		private EntityRef<Item> _Item;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onproduct_idChanging(System.Nullable<int> value);
    partial void Onproduct_idChanged();
    partial void Oninvoice_idChanging(System.Nullable<int> value);
    partial void Oninvoice_idChanged();
    partial void OnquantChanging(System.Nullable<double> value);
    partial void OnquantChanged();
    #endregion
		
		public Invoice_item()
		{
			this._Invoice = default(EntityRef<Invoice>);
			this._Item = default(EntityRef<Item>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_id", DbType="Int")]
		public System.Nullable<int> product_id
		{
			get
			{
				return this._product_id;
			}
			set
			{
				if ((this._product_id != value))
				{
					if (this._Item.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onproduct_idChanging(value);
					this.SendPropertyChanging();
					this._product_id = value;
					this.SendPropertyChanged("product_id");
					this.Onproduct_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoice_id", DbType="Int")]
		public System.Nullable<int> invoice_id
		{
			get
			{
				return this._invoice_id;
			}
			set
			{
				if ((this._invoice_id != value))
				{
					if (this._Invoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oninvoice_idChanging(value);
					this.SendPropertyChanging();
					this._invoice_id = value;
					this.SendPropertyChanged("invoice_id");
					this.Oninvoice_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quant", DbType="Float")]
		public System.Nullable<double> quant
		{
			get
			{
				return this._quant;
			}
			set
			{
				if ((this._quant != value))
				{
					this.OnquantChanging(value);
					this.SendPropertyChanging();
					this._quant = value;
					this.SendPropertyChanged("quant");
					this.OnquantChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_Invoice_item", Storage="_Invoice", ThisKey="invoice_id", OtherKey="id", IsForeignKey=true)]
		public Invoice Invoice
		{
			get
			{
				return this._Invoice.Entity;
			}
			set
			{
				Invoice previousValue = this._Invoice.Entity;
				if (((previousValue != value) 
							|| (this._Invoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Invoice.Entity = null;
						previousValue.Invoice_items.Remove(this);
					}
					this._Invoice.Entity = value;
					if ((value != null))
					{
						value.Invoice_items.Add(this);
						this._invoice_id = value.id;
					}
					else
					{
						this._invoice_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Invoice");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_Invoice_item", Storage="_Item", ThisKey="product_id", OtherKey="id", IsForeignKey=true)]
		public Item Item
		{
			get
			{
				return this._Item.Entity;
			}
			set
			{
				Item previousValue = this._Item.Entity;
				if (((previousValue != value) 
							|| (this._Item.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Item.Entity = null;
						previousValue.Invoice_items.Remove(this);
					}
					this._Item.Entity = value;
					if ((value != null))
					{
						value.Invoice_items.Add(this);
						this._product_id = value.id;
					}
					else
					{
						this._product_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Item");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="business_solutiondb.Payment_method")]
	public partial class Payment_method : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _payment_type;
		
		private long _car_number;
		
		private string _client_name;
		
		private System.Nullable<int> _invoice_id;
		
		private EntityRef<Invoice> _Invoice;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onpayment_typeChanging(string value);
    partial void Onpayment_typeChanged();
    partial void Oncar_numberChanging(long value);
    partial void Oncar_numberChanged();
    partial void Onclient_nameChanging(string value);
    partial void Onclient_nameChanged();
    partial void Oninvoice_idChanging(System.Nullable<int> value);
    partial void Oninvoice_idChanged();
    #endregion
		
		public Payment_method()
		{
			this._Invoice = default(EntityRef<Invoice>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_payment_type", DbType="NVarChar(45)")]
		public string payment_type
		{
			get
			{
				return this._payment_type;
			}
			set
			{
				if ((this._payment_type != value))
				{
					this.Onpayment_typeChanging(value);
					this.SendPropertyChanging();
					this._payment_type = value;
					this.SendPropertyChanged("payment_type");
					this.Onpayment_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_car_number", DbType="BigInt NOT NULL")]
		public long car_number
		{
			get
			{
				return this._car_number;
			}
			set
			{
				if ((this._car_number != value))
				{
					this.Oncar_numberChanging(value);
					this.SendPropertyChanging();
					this._car_number = value;
					this.SendPropertyChanged("car_number");
					this.Oncar_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_client_name", DbType="NVarChar(45)")]
		public string client_name
		{
			get
			{
				return this._client_name;
			}
			set
			{
				if ((this._client_name != value))
				{
					this.Onclient_nameChanging(value);
					this.SendPropertyChanging();
					this._client_name = value;
					this.SendPropertyChanged("client_name");
					this.Onclient_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_invoice_id", DbType="Int")]
		public System.Nullable<int> invoice_id
		{
			get
			{
				return this._invoice_id;
			}
			set
			{
				if ((this._invoice_id != value))
				{
					if (this._Invoice.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oninvoice_idChanging(value);
					this.SendPropertyChanging();
					this._invoice_id = value;
					this.SendPropertyChanged("invoice_id");
					this.Oninvoice_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_Payment_method", Storage="_Invoice", ThisKey="invoice_id", OtherKey="id", IsForeignKey=true)]
		public Invoice Invoice
		{
			get
			{
				return this._Invoice.Entity;
			}
			set
			{
				Invoice previousValue = this._Invoice.Entity;
				if (((previousValue != value) 
							|| (this._Invoice.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Invoice.Entity = null;
						previousValue.Payment_methods.Remove(this);
					}
					this._Invoice.Entity = value;
					if ((value != null))
					{
						value.Payment_methods.Add(this);
						this._invoice_id = value.id;
					}
					else
					{
						this._invoice_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Invoice");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="business_solutiondb.Invoice")]
	public partial class Invoice : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<System.DateTime> _date;
		
		private System.Nullable<double> _total_amount;
		
		private System.Nullable<double> _discount;
		
		private System.Nullable<double> _tax;
		
		private System.Nullable<int> _user_id;
		
		private string _barcode;
		
		private System.Nullable<double> _total;
		
		private EntitySet<Invoice_item> _Invoice_items;
		
		private EntitySet<Payment_method> _Payment_methods;
		
		private EntityRef<User> _User;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OndateChanging(System.Nullable<System.DateTime> value);
    partial void OndateChanged();
    partial void Ontotal_amountChanging(System.Nullable<double> value);
    partial void Ontotal_amountChanged();
    partial void OndiscountChanging(System.Nullable<double> value);
    partial void OndiscountChanged();
    partial void OntaxChanging(System.Nullable<double> value);
    partial void OntaxChanged();
    partial void Onuser_idChanging(System.Nullable<int> value);
    partial void Onuser_idChanged();
    partial void OnbarcodeChanging(string value);
    partial void OnbarcodeChanged();
    partial void OntotalChanging(System.Nullable<double> value);
    partial void OntotalChanged();
    #endregion
		
		public Invoice()
		{
			this._Invoice_items = new EntitySet<Invoice_item>(new Action<Invoice_item>(this.attach_Invoice_items), new Action<Invoice_item>(this.detach_Invoice_items));
			this._Payment_methods = new EntitySet<Payment_method>(new Action<Payment_method>(this.attach_Payment_methods), new Action<Payment_method>(this.detach_Payment_methods));
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date", DbType="Date")]
		public System.Nullable<System.DateTime> date
		{
			get
			{
				return this._date;
			}
			set
			{
				if ((this._date != value))
				{
					this.OndateChanging(value);
					this.SendPropertyChanging();
					this._date = value;
					this.SendPropertyChanged("date");
					this.OndateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total_amount", DbType="Float")]
		public System.Nullable<double> total_amount
		{
			get
			{
				return this._total_amount;
			}
			set
			{
				if ((this._total_amount != value))
				{
					this.Ontotal_amountChanging(value);
					this.SendPropertyChanging();
					this._total_amount = value;
					this.SendPropertyChanged("total_amount");
					this.Ontotal_amountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_discount", DbType="Float")]
		public System.Nullable<double> discount
		{
			get
			{
				return this._discount;
			}
			set
			{
				if ((this._discount != value))
				{
					this.OndiscountChanging(value);
					this.SendPropertyChanging();
					this._discount = value;
					this.SendPropertyChanged("discount");
					this.OndiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_tax", DbType="Float")]
		public System.Nullable<double> tax
		{
			get
			{
				return this._tax;
			}
			set
			{
				if ((this._tax != value))
				{
					this.OntaxChanging(value);
					this.SendPropertyChanging();
					this._tax = value;
					this.SendPropertyChanged("tax");
					this.OntaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int")]
		public System.Nullable<int> user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_barcode", DbType="VarChar(50)")]
		public string barcode
		{
			get
			{
				return this._barcode;
			}
			set
			{
				if ((this._barcode != value))
				{
					this.OnbarcodeChanging(value);
					this.SendPropertyChanging();
					this._barcode = value;
					this.SendPropertyChanged("barcode");
					this.OnbarcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_total", DbType="Float")]
		public System.Nullable<double> total
		{
			get
			{
				return this._total;
			}
			set
			{
				if ((this._total != value))
				{
					this.OntotalChanging(value);
					this.SendPropertyChanging();
					this._total = value;
					this.SendPropertyChanged("total");
					this.OntotalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_Invoice_item", Storage="_Invoice_items", ThisKey="id", OtherKey="invoice_id")]
		public EntitySet<Invoice_item> Invoice_items
		{
			get
			{
				return this._Invoice_items;
			}
			set
			{
				this._Invoice_items.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Invoice_Payment_method", Storage="_Payment_methods", ThisKey="id", OtherKey="invoice_id")]
		public EntitySet<Payment_method> Payment_methods
		{
			get
			{
				return this._Payment_methods;
			}
			set
			{
				this._Payment_methods.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_Invoice", Storage="_User", ThisKey="user_id", OtherKey="id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.Invoices.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.Invoices.Add(this);
						this._user_id = value.id;
					}
					else
					{
						this._user_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Invoice_items(Invoice_item entity)
		{
			this.SendPropertyChanging();
			entity.Invoice = this;
		}
		
		private void detach_Invoice_items(Invoice_item entity)
		{
			this.SendPropertyChanging();
			entity.Invoice = null;
		}
		
		private void attach_Payment_methods(Payment_method entity)
		{
			this.SendPropertyChanging();
			entity.Invoice = this;
		}
		
		private void detach_Payment_methods(Payment_method entity)
		{
			this.SendPropertyChanging();
			entity.Invoice = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="business_solutiondb.Item")]
	public partial class Item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _barcode;
		
		private string _name;
		
		private string _description;
		
		private System.Nullable<float> _price;
		
		private System.Nullable<System.DateTime> _expired_date;
		
		private System.Nullable<int> _category_id;
		
		private System.Nullable<int> _brand_id;
		
		private System.Nullable<int> _section_id;
		
		private System.Nullable<int> _quantity;
		
		private EntitySet<Invoice_item> _Invoice_items;
		
		private EntityRef<Item_brand> _Item_brand;
		
		private EntityRef<Item_category> _Item_category;
		
		private EntityRef<Section> _Section;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnbarcodeChanging(string value);
    partial void OnbarcodeChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnpriceChanging(System.Nullable<float> value);
    partial void OnpriceChanged();
    partial void Onexpired_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onexpired_dateChanged();
    partial void Oncategory_idChanging(System.Nullable<int> value);
    partial void Oncategory_idChanged();
    partial void Onbrand_idChanging(System.Nullable<int> value);
    partial void Onbrand_idChanged();
    partial void Onsection_idChanging(System.Nullable<int> value);
    partial void Onsection_idChanged();
    partial void OnquantityChanging(System.Nullable<int> value);
    partial void OnquantityChanged();
    #endregion
		
		public Item()
		{
			this._Invoice_items = new EntitySet<Invoice_item>(new Action<Invoice_item>(this.attach_Invoice_items), new Action<Invoice_item>(this.detach_Invoice_items));
			this._Item_brand = default(EntityRef<Item_brand>);
			this._Item_category = default(EntityRef<Item_category>);
			this._Section = default(EntityRef<Section>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_barcode", DbType="NVarChar(20)")]
		public string barcode
		{
			get
			{
				return this._barcode;
			}
			set
			{
				if ((this._barcode != value))
				{
					this.OnbarcodeChanging(value);
					this.SendPropertyChanging();
					this._barcode = value;
					this.SendPropertyChanged("barcode");
					this.OnbarcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(45)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="NVarChar(45)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_price", DbType="Real")]
		public System.Nullable<float> price
		{
			get
			{
				return this._price;
			}
			set
			{
				if ((this._price != value))
				{
					this.OnpriceChanging(value);
					this.SendPropertyChanging();
					this._price = value;
					this.SendPropertyChanged("price");
					this.OnpriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_expired_date", DbType="Date")]
		public System.Nullable<System.DateTime> expired_date
		{
			get
			{
				return this._expired_date;
			}
			set
			{
				if ((this._expired_date != value))
				{
					this.Onexpired_dateChanging(value);
					this.SendPropertyChanging();
					this._expired_date = value;
					this.SendPropertyChanged("expired_date");
					this.Onexpired_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_category_id", DbType="Int")]
		public System.Nullable<int> category_id
		{
			get
			{
				return this._category_id;
			}
			set
			{
				if ((this._category_id != value))
				{
					if (this._Item_category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Oncategory_idChanging(value);
					this.SendPropertyChanging();
					this._category_id = value;
					this.SendPropertyChanged("category_id");
					this.Oncategory_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_brand_id", DbType="Int")]
		public System.Nullable<int> brand_id
		{
			get
			{
				return this._brand_id;
			}
			set
			{
				if ((this._brand_id != value))
				{
					if (this._Item_brand.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onbrand_idChanging(value);
					this.SendPropertyChanging();
					this._brand_id = value;
					this.SendPropertyChanged("brand_id");
					this.Onbrand_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_section_id", DbType="Int")]
		public System.Nullable<int> section_id
		{
			get
			{
				return this._section_id;
			}
			set
			{
				if ((this._section_id != value))
				{
					if (this._Section.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onsection_idChanging(value);
					this.SendPropertyChanging();
					this._section_id = value;
					this.SendPropertyChanged("section_id");
					this.Onsection_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_quantity", DbType="Int")]
		public System.Nullable<int> quantity
		{
			get
			{
				return this._quantity;
			}
			set
			{
				if ((this._quantity != value))
				{
					this.OnquantityChanging(value);
					this.SendPropertyChanging();
					this._quantity = value;
					this.SendPropertyChanged("quantity");
					this.OnquantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_Invoice_item", Storage="_Invoice_items", ThisKey="id", OtherKey="product_id")]
		public EntitySet<Invoice_item> Invoice_items
		{
			get
			{
				return this._Invoice_items;
			}
			set
			{
				this._Invoice_items.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_brand_Item", Storage="_Item_brand", ThisKey="brand_id", OtherKey="id", IsForeignKey=true)]
		public Item_brand Item_brand
		{
			get
			{
				return this._Item_brand.Entity;
			}
			set
			{
				Item_brand previousValue = this._Item_brand.Entity;
				if (((previousValue != value) 
							|| (this._Item_brand.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Item_brand.Entity = null;
						previousValue.Items.Remove(this);
					}
					this._Item_brand.Entity = value;
					if ((value != null))
					{
						value.Items.Add(this);
						this._brand_id = value.id;
					}
					else
					{
						this._brand_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Item_brand");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_category_Item", Storage="_Item_category", ThisKey="category_id", OtherKey="id", IsForeignKey=true)]
		public Item_category Item_category
		{
			get
			{
				return this._Item_category.Entity;
			}
			set
			{
				Item_category previousValue = this._Item_category.Entity;
				if (((previousValue != value) 
							|| (this._Item_category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Item_category.Entity = null;
						previousValue.Items.Remove(this);
					}
					this._Item_category.Entity = value;
					if ((value != null))
					{
						value.Items.Add(this);
						this._category_id = value.id;
					}
					else
					{
						this._category_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Item_category");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Section_Item", Storage="_Section", ThisKey="section_id", OtherKey="id", IsForeignKey=true)]
		public Section Section
		{
			get
			{
				return this._Section.Entity;
			}
			set
			{
				Section previousValue = this._Section.Entity;
				if (((previousValue != value) 
							|| (this._Section.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Section.Entity = null;
						previousValue.Items.Remove(this);
					}
					this._Section.Entity = value;
					if ((value != null))
					{
						value.Items.Add(this);
						this._section_id = value.id;
					}
					else
					{
						this._section_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Section");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Invoice_items(Invoice_item entity)
		{
			this.SendPropertyChanging();
			entity.Item = this;
		}
		
		private void detach_Invoice_items(Invoice_item entity)
		{
			this.SendPropertyChanging();
			entity.Item = null;
		}
	}
	
	public partial class sp_cities_by_provinceResult
	{
		
		private string _city_name;
		
		public sp_cities_by_provinceResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city_name", DbType="NVarChar(45) NOT NULL", CanBeNull=false)]
		public string city_name
		{
			get
			{
				return this._city_name;
			}
			set
			{
				if ((this._city_name != value))
				{
					this._city_name = value;
				}
			}
		}
	}
	
	public partial class sp_department_listResult
	{
		
		private int _id;
		
		private string _department_name;
		
		public sp_department_listResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_department_name", DbType="NVarChar(45)")]
		public string department_name
		{
			get
			{
				return this._department_name;
			}
			set
			{
				if ((this._department_name != value))
				{
					this._department_name = value;
				}
			}
		}
	}
	
	public partial class sp_employee_listResult
	{
		
		private string _Full_name;
		
		private string _Gender;
		
		private string _Department;
		
		private string _Job_title;
		
		private System.Nullable<long> _Phone;
		
		private string _Address;
		
		private string _City;
		
		private string _Province;
		
		public sp_employee_listResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Full name]", Storage="_Full_name", DbType="NVarChar(91) NOT NULL", CanBeNull=false)]
		public string Full_name
		{
			get
			{
				return this._Full_name;
			}
			set
			{
				if ((this._Full_name != value))
				{
					this._Full_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(45)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this._Gender = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="NVarChar(45)")]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this._Department = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Job title]", Storage="_Job_title", DbType="NVarChar(45)")]
		public string Job_title
		{
			get
			{
				return this._Job_title;
			}
			set
			{
				if ((this._Job_title != value))
				{
					this._Job_title = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="BigInt")]
		public System.Nullable<long> Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this._Phone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(45) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Province", DbType="NVarChar(45)")]
		public string Province
		{
			get
			{
				return this._Province;
			}
			set
			{
				if ((this._Province != value))
				{
					this._Province = value;
				}
			}
		}
	}
	
	public partial class sp_get_citylistResult
	{
		
		private int _id;
		
		private string _city_name;
		
		public sp_get_citylistResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city_name", DbType="NVarChar(45) NOT NULL", CanBeNull=false)]
		public string city_name
		{
			get
			{
				return this._city_name;
			}
			set
			{
				if ((this._city_name != value))
				{
					this._city_name = value;
				}
			}
		}
	}
	
	public partial class sp_get_payroll_for_employee_idResult
	{
		
		private int _Employee_Number;
		
		private string _Full_Name;
		
		private System.Nullable<int> _Working_Hours;
		
		private System.Nullable<double> _Gross_Salary;
		
		private System.Nullable<double> _Net_Salary;
		
		private System.Nullable<System.DateTime> _Salary_Period;
		
		private System.Nullable<double> _Adjustment_Percent;
		
		public sp_get_payroll_for_employee_idResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Employee Number]", Storage="_Employee_Number", DbType="Int NOT NULL")]
		public int Employee_Number
		{
			get
			{
				return this._Employee_Number;
			}
			set
			{
				if ((this._Employee_Number != value))
				{
					this._Employee_Number = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Full Name]", Storage="_Full_Name", DbType="NVarChar(91) NOT NULL", CanBeNull=false)]
		public string Full_Name
		{
			get
			{
				return this._Full_Name;
			}
			set
			{
				if ((this._Full_Name != value))
				{
					this._Full_Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Working Hours]", Storage="_Working_Hours", DbType="Int")]
		public System.Nullable<int> Working_Hours
		{
			get
			{
				return this._Working_Hours;
			}
			set
			{
				if ((this._Working_Hours != value))
				{
					this._Working_Hours = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Gross Salary]", Storage="_Gross_Salary", DbType="Float")]
		public System.Nullable<double> Gross_Salary
		{
			get
			{
				return this._Gross_Salary;
			}
			set
			{
				if ((this._Gross_Salary != value))
				{
					this._Gross_Salary = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Net Salary]", Storage="_Net_Salary", DbType="Float")]
		public System.Nullable<double> Net_Salary
		{
			get
			{
				return this._Net_Salary;
			}
			set
			{
				if ((this._Net_Salary != value))
				{
					this._Net_Salary = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Salary Period]", Storage="_Salary_Period", DbType="Date")]
		public System.Nullable<System.DateTime> Salary_Period
		{
			get
			{
				return this._Salary_Period;
			}
			set
			{
				if ((this._Salary_Period != value))
				{
					this._Salary_Period = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Adjustment Percent]", Storage="_Adjustment_Percent", DbType="Float")]
		public System.Nullable<double> Adjustment_Percent
		{
			get
			{
				return this._Adjustment_Percent;
			}
			set
			{
				if ((this._Adjustment_Percent != value))
				{
					this._Adjustment_Percent = value;
				}
			}
		}
	}
	
	public partial class sp_jobtitle_listResult
	{
		
		private int _id;
		
		private string _job_title;
		
		public sp_jobtitle_listResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_job_title", DbType="NVarChar(45)")]
		public string job_title
		{
			get
			{
				return this._job_title;
			}
			set
			{
				if ((this._job_title != value))
				{
					this._job_title = value;
				}
			}
		}
	}
	
	public partial class sp_sections_by_warehouseResult
	{
		
		private string _section_name;
		
		public sp_sections_by_warehouseResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_section_name", DbType="NVarChar(45)")]
		public string section_name
		{
			get
			{
				return this._section_name;
			}
			set
			{
				if ((this._section_name != value))
				{
					this._section_name = value;
				}
			}
		}
	}
	
	public partial class sp_employee_listResult1
	{
		
		private int _Id;
		
		private string _FullName;
		
		private string _Gender;
		
		private string _Department;
		
		private string _JobTitle;
		
		private System.Nullable<long> _Phone;
		
		private string _Address;
		
		private string _City;
		
		private string _Province;
		
		public sp_employee_listResult1()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(91) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this._FullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(45)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this._Gender = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="NVarChar(45)")]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this._Department = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobTitle", DbType="NVarChar(45)")]
		public string JobTitle
		{
			get
			{
				return this._JobTitle;
			}
			set
			{
				if ((this._JobTitle != value))
				{
					this._JobTitle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="BigInt")]
		public System.Nullable<long> Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this._Phone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(45) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Province", DbType="NVarChar(45)")]
		public string Province
		{
			get
			{
				return this._Province;
			}
			set
			{
				if ((this._Province != value))
				{
					this._Province = value;
				}
			}
		}
	}
	
	public partial class sp_employee_listResult2
	{
		
		private int _Id;
		
		private string _fName;
		
		private string _lName;
		
		private string _FullName;
		
		private string _Gender;
		
		private string _Department;
		
		private string _JobTitle;
		
		private System.Nullable<long> _Phone;
		
		private string _Address;
		
		private System.Nullable<double> _salary;
		
		private string _City;
		
		private string _Province;
		
		public sp_employee_listResult2()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fName", DbType="NVarChar(45)")]
		public string fName
		{
			get
			{
				return this._fName;
			}
			set
			{
				if ((this._fName != value))
				{
					this._fName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lName", DbType="NVarChar(45)")]
		public string lName
		{
			get
			{
				return this._lName;
			}
			set
			{
				if ((this._lName != value))
				{
					this._lName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(91) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this._FullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(45)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this._Gender = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="NVarChar(45)")]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this._Department = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobTitle", DbType="NVarChar(45)")]
		public string JobTitle
		{
			get
			{
				return this._JobTitle;
			}
			set
			{
				if ((this._JobTitle != value))
				{
					this._JobTitle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="BigInt")]
		public System.Nullable<long> Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this._Phone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salary", DbType="Float")]
		public System.Nullable<double> salary
		{
			get
			{
				return this._salary;
			}
			set
			{
				if ((this._salary != value))
				{
					this._salary = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(45) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Province", DbType="NVarChar(45)")]
		public string Province
		{
			get
			{
				return this._Province;
			}
			set
			{
				if ((this._Province != value))
				{
					this._Province = value;
				}
			}
		}
	}
	
	public partial class sp_payroll_listResult
	{
		
		private int _EmployeeId;
		
		private System.Nullable<double> _SalaryPerHr;
		
		private string _FullName;
		
		private int _PayrollId;
		
		private System.Nullable<int> _WorkingHours;
		
		private System.Nullable<double> _GrossSalary;
		
		private System.Nullable<double> _NetSalary;
		
		private System.Nullable<System.DateTime> _SalaryIniPeriod;
		
		private System.Nullable<System.DateTime> _SalaryEndPeriod;
		
		private System.Nullable<double> _AdjustmentPercent;
		
		public sp_payroll_listResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmployeeId", DbType="Int NOT NULL")]
		public int EmployeeId
		{
			get
			{
				return this._EmployeeId;
			}
			set
			{
				if ((this._EmployeeId != value))
				{
					this._EmployeeId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalaryPerHr", DbType="Float")]
		public System.Nullable<double> SalaryPerHr
		{
			get
			{
				return this._SalaryPerHr;
			}
			set
			{
				if ((this._SalaryPerHr != value))
				{
					this._SalaryPerHr = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(91) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this._FullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayrollId", DbType="Int NOT NULL")]
		public int PayrollId
		{
			get
			{
				return this._PayrollId;
			}
			set
			{
				if ((this._PayrollId != value))
				{
					this._PayrollId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkingHours", DbType="Int")]
		public System.Nullable<int> WorkingHours
		{
			get
			{
				return this._WorkingHours;
			}
			set
			{
				if ((this._WorkingHours != value))
				{
					this._WorkingHours = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrossSalary", DbType="Float")]
		public System.Nullable<double> GrossSalary
		{
			get
			{
				return this._GrossSalary;
			}
			set
			{
				if ((this._GrossSalary != value))
				{
					this._GrossSalary = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetSalary", DbType="Float")]
		public System.Nullable<double> NetSalary
		{
			get
			{
				return this._NetSalary;
			}
			set
			{
				if ((this._NetSalary != value))
				{
					this._NetSalary = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalaryIniPeriod", DbType="Date")]
		public System.Nullable<System.DateTime> SalaryIniPeriod
		{
			get
			{
				return this._SalaryIniPeriod;
			}
			set
			{
				if ((this._SalaryIniPeriod != value))
				{
					this._SalaryIniPeriod = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalaryEndPeriod", DbType="Date")]
		public System.Nullable<System.DateTime> SalaryEndPeriod
		{
			get
			{
				return this._SalaryEndPeriod;
			}
			set
			{
				if ((this._SalaryEndPeriod != value))
				{
					this._SalaryEndPeriod = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdjustmentPercent", DbType="Float")]
		public System.Nullable<double> AdjustmentPercent
		{
			get
			{
				return this._AdjustmentPercent;
			}
			set
			{
				if ((this._AdjustmentPercent != value))
				{
					this._AdjustmentPercent = value;
				}
			}
		}
	}
	
	public partial class rp_items_by_categoryResult
	{
		
		private string _Barcode;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<float> _Price;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _Barcode1;
		
		private string _Category;
		
		private string _Brand;
		
		private string _Section;
		
		private string _Warehouse;
		
		public rp_items_by_categoryResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcode", DbType="NVarChar(20)")]
		public string Barcode
		{
			get
			{
				return this._Barcode;
			}
			set
			{
				if ((this._Barcode != value))
				{
					this._Barcode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(45)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(45)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Real")]
		public System.Nullable<float> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcode1", DbType="NVarChar(20)")]
		public string Barcode1
		{
			get
			{
				return this._Barcode1;
			}
			set
			{
				if ((this._Barcode1 != value))
				{
					this._Barcode1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="VarChar(150)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this._Category = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="VarChar(50)")]
		public string Brand
		{
			get
			{
				return this._Brand;
			}
			set
			{
				if ((this._Brand != value))
				{
					this._Brand = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Section", DbType="NVarChar(45)")]
		public string Section
		{
			get
			{
				return this._Section;
			}
			set
			{
				if ((this._Section != value))
				{
					this._Section = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Warehouse", DbType="NVarChar(45)")]
		public string Warehouse
		{
			get
			{
				return this._Warehouse;
			}
			set
			{
				if ((this._Warehouse != value))
				{
					this._Warehouse = value;
				}
			}
		}
	}
	
	public partial class rp_items_by_brandResult
	{
		
		private string _Barcode;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<float> _Price;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _Barcode1;
		
		private string _Category;
		
		private string _Brand;
		
		private string _Section;
		
		private string _Warehouse;
		
		public rp_items_by_brandResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcode", DbType="NVarChar(20)")]
		public string Barcode
		{
			get
			{
				return this._Barcode;
			}
			set
			{
				if ((this._Barcode != value))
				{
					this._Barcode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(45)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(45)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Real")]
		public System.Nullable<float> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcode1", DbType="NVarChar(20)")]
		public string Barcode1
		{
			get
			{
				return this._Barcode1;
			}
			set
			{
				if ((this._Barcode1 != value))
				{
					this._Barcode1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="VarChar(150)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this._Category = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="VarChar(50)")]
		public string Brand
		{
			get
			{
				return this._Brand;
			}
			set
			{
				if ((this._Brand != value))
				{
					this._Brand = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Section", DbType="NVarChar(45)")]
		public string Section
		{
			get
			{
				return this._Section;
			}
			set
			{
				if ((this._Section != value))
				{
					this._Section = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Warehouse", DbType="NVarChar(45)")]
		public string Warehouse
		{
			get
			{
				return this._Warehouse;
			}
			set
			{
				if ((this._Warehouse != value))
				{
					this._Warehouse = value;
				}
			}
		}
	}
	
	public partial class sp_list_permission_by_userResult
	{
		
		private string _Description;
		
		public sp_list_permission_by_userResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(50)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
	}
	
	public partial class sp__item_listResult
	{
		
		private string _Barcode;
		
		private string _Name;
		
		private string _Description;
		
		private System.Nullable<float> _Price;
		
		private System.Nullable<System.DateTime> _Date;
		
		private string _Barcode1;
		
		private System.Nullable<int> _Quantity;
		
		private string _Category;
		
		private string _Brand;
		
		private string _Section;
		
		private string _Warehouse;
		
		public sp__item_listResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcode", DbType="NVarChar(20)")]
		public string Barcode
		{
			get
			{
				return this._Barcode;
			}
			set
			{
				if ((this._Barcode != value))
				{
					this._Barcode = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="NVarChar(45)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(45)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this._Description = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Real")]
		public System.Nullable<float> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this._Price = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date", DbType="Date")]
		public System.Nullable<System.DateTime> Date
		{
			get
			{
				return this._Date;
			}
			set
			{
				if ((this._Date != value))
				{
					this._Date = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Barcode1", DbType="NVarChar(20)")]
		public string Barcode1
		{
			get
			{
				return this._Barcode1;
			}
			set
			{
				if ((this._Barcode1 != value))
				{
					this._Barcode1 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int")]
		public System.Nullable<int> Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this._Quantity = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="VarChar(150)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this._Category = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Brand", DbType="VarChar(50)")]
		public string Brand
		{
			get
			{
				return this._Brand;
			}
			set
			{
				if ((this._Brand != value))
				{
					this._Brand = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Section", DbType="NVarChar(45)")]
		public string Section
		{
			get
			{
				return this._Section;
			}
			set
			{
				if ((this._Section != value))
				{
					this._Section = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Warehouse", DbType="NVarChar(45)")]
		public string Warehouse
		{
			get
			{
				return this._Warehouse;
			}
			set
			{
				if ((this._Warehouse != value))
				{
					this._Warehouse = value;
				}
			}
		}
	}
	
	public partial class rp_employee_details_by_idResult
	{
		
		private int _Id;
		
		private string _fName;
		
		private string _lName;
		
		private string _FullName;
		
		private string _Gender;
		
		private string _Department;
		
		private string _JobTitle;
		
		private System.Nullable<long> _Phone;
		
		private string _Address;
		
		private System.Nullable<double> _salary;
		
		private string _City;
		
		private string _Province;
		
		private int _PayrollId;
		
		private System.Nullable<int> _WorkingHours;
		
		private System.Nullable<double> _GrossSalary;
		
		private System.Nullable<double> _NetSalary;
		
		private System.Nullable<System.DateTime> _SalaryIniPeriod;
		
		private System.Nullable<System.DateTime> _SalaryEndPeriod;
		
		private System.Nullable<double> _AdjustmentPercent;
		
		public rp_employee_details_by_idResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL")]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this._Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fName", DbType="NVarChar(45)")]
		public string fName
		{
			get
			{
				return this._fName;
			}
			set
			{
				if ((this._fName != value))
				{
					this._fName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lName", DbType="NVarChar(45)")]
		public string lName
		{
			get
			{
				return this._lName;
			}
			set
			{
				if ((this._lName != value))
				{
					this._lName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FullName", DbType="NVarChar(91) NOT NULL", CanBeNull=false)]
		public string FullName
		{
			get
			{
				return this._FullName;
			}
			set
			{
				if ((this._FullName != value))
				{
					this._FullName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="NVarChar(45)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this._Gender = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Department", DbType="NVarChar(45)")]
		public string Department
		{
			get
			{
				return this._Department;
			}
			set
			{
				if ((this._Department != value))
				{
					this._Department = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_JobTitle", DbType="NVarChar(45)")]
		public string JobTitle
		{
			get
			{
				return this._JobTitle;
			}
			set
			{
				if ((this._JobTitle != value))
				{
					this._JobTitle = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="BigInt")]
		public System.Nullable<long> Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this._Phone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="NVarChar(255)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_salary", DbType="Float")]
		public System.Nullable<double> salary
		{
			get
			{
				return this._salary;
			}
			set
			{
				if ((this._salary != value))
				{
					this._salary = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="NVarChar(45) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Province", DbType="NVarChar(45)")]
		public string Province
		{
			get
			{
				return this._Province;
			}
			set
			{
				if ((this._Province != value))
				{
					this._Province = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PayrollId", DbType="Int NOT NULL")]
		public int PayrollId
		{
			get
			{
				return this._PayrollId;
			}
			set
			{
				if ((this._PayrollId != value))
				{
					this._PayrollId = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_WorkingHours", DbType="Int")]
		public System.Nullable<int> WorkingHours
		{
			get
			{
				return this._WorkingHours;
			}
			set
			{
				if ((this._WorkingHours != value))
				{
					this._WorkingHours = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GrossSalary", DbType="Float")]
		public System.Nullable<double> GrossSalary
		{
			get
			{
				return this._GrossSalary;
			}
			set
			{
				if ((this._GrossSalary != value))
				{
					this._GrossSalary = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NetSalary", DbType="Float")]
		public System.Nullable<double> NetSalary
		{
			get
			{
				return this._NetSalary;
			}
			set
			{
				if ((this._NetSalary != value))
				{
					this._NetSalary = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalaryIniPeriod", DbType="Date")]
		public System.Nullable<System.DateTime> SalaryIniPeriod
		{
			get
			{
				return this._SalaryIniPeriod;
			}
			set
			{
				if ((this._SalaryIniPeriod != value))
				{
					this._SalaryIniPeriod = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SalaryEndPeriod", DbType="Date")]
		public System.Nullable<System.DateTime> SalaryEndPeriod
		{
			get
			{
				return this._SalaryEndPeriod;
			}
			set
			{
				if ((this._SalaryEndPeriod != value))
				{
					this._SalaryEndPeriod = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AdjustmentPercent", DbType="Float")]
		public System.Nullable<double> AdjustmentPercent
		{
			get
			{
				return this._AdjustmentPercent;
			}
			set
			{
				if ((this._AdjustmentPercent != value))
				{
					this._AdjustmentPercent = value;
				}
			}
		}
	}
	
	public partial class sp_list_userResult
	{
		
		private string _Username;
		
		private string _Employee;
		
		public sp_list_userResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Username", DbType="NVarChar(45)")]
		public string Username
		{
			get
			{
				return this._Username;
			}
			set
			{
				if ((this._Username != value))
				{
					this._Username = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Employee", DbType="NVarChar(90) NOT NULL", CanBeNull=false)]
		public string Employee
		{
			get
			{
				return this._Employee;
			}
			set
			{
				if ((this._Employee != value))
				{
					this._Employee = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
